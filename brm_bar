#!/bin/bash

if [[ $(pgrep -cx brm_bar) > 1 ]]; then
  exit 1;
fi

# Constants
dir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
support_dir="$dir/brm_bar_support"
icon_dir="$support_dir/icons"
fifo=/tmp/brm_bar_fifo
font="Source Code Pro:pixelsize=12:antialias=true:hinting=true"
background="#626262" #$dir/../bar/test.png" #"#626262"
width=1440

# Globals
stat=""
desktops=""
battery=""
wifi=""
volume=""
song=""
date=""
uptime=""

function get_desktops() {
  desktops_raw="$1"
  desktops=""
  IFS=':' read -a desktop_array <<< "$desktops_raw"
  index=0
  for element in "${desktop_array[@]}"
  do
    if [[ $element == "O"* ]] || [[ $element == "F"* ]]; then
      desktops="${desktops} %{I:$icon_dir/desktop_2.png:}"
    else if [[ $element == "o"* ]]; then
      desktops="${desktops} %{A:bspc desktop -f ^$index:}%{I:$icon_dir/desktop_1.png:}%{A}"
    else if [[ $element == "f"* ]]; then
      desktops="${desktops} %{A:bspc desktop -f ^$index:}%{I:$icon_dir/desktop_0.png:}%{A}"
    fi
    fi
    fi
    (( index += 1 ))
  done
}

function get_volume() {
  volume_raw="$1"
  volume_percent=$(sed 's/.*\[\(.*\)%\].*/\1/g' <<< $volume_raw)
  if [[ $volume_raw == *"[off]"* ]]; then
    volume="%{I:$icon_dir/volume_mute.png:}\t"
  else
    volume_strength=$(( (volume_percent - 1) / 25 ))
    volume="%{I:$icon_dir/volume_$volume_strength.png:}\t"
  fi
}

function do_update() {
  date=$(date +%c)
  if [[ $(pgrep -c pianobar) < 1 ]]; then
    song=""
  fi
}

function do_slow_update() {
  battery_raw=$(acpi)
  battery_parsed=$(sed 's/.\+, \(.\+\)%.*/\1/g' <<< $battery_raw)
  if [[ $battery_raw == *"Charging"* ]]; then
    battery="$battery_parsed%% %{I:$icon_dir/battery_charging.png:}\t\t"
  else
    percent=$(( 7 * ($battery_parsed + 5) / 100 ))
    battery="$battery_parsed%% %{I:$icon_dir/battery_$percent.png:}\t\t"
  fi

  wifi_line=$(iwconfig 2> /dev/null |grep "Link Quality")
  wifi_strength=0
  if [[ $wifi_line != "" ]]; then
    wifi_strength=$(iwconfig 2>/dev/null | grep "Link Quality" | sed 's/.*Link Quality=\(.*\) Signal.*/\1/g' | sed '/[0-9]\+\/[0-9]\+/!s/.*/-1/g')
  fi
  if [[ $wifi_strength == "" ]]; then
    wifi_strength=0
  fi
  if [[ $wifi_strength == "-1" ]]; then
    wifi_percent="x"
  else
    wifi_percent=$(( 4 * (105*$wifi_strength) / 100 ))
  fi

  wifi="%{I:$icon_dir/wifi_$wifi_percent.png:}\t\t"

  uptime=$(uptime -p | tr -d '\n' | sed 's/up //g')
}

function get_song() {
  song="\t$1"
}

function parse_fifo() {
  if [[ {"$1" == "[STATUS]"* ]]; then
    stat="${1:8}"
  fi
  if [[ "$1" == "[DESKTOP]"* ]]; then
    get_desktops "${1:9}"
  fi
  if [[ "$1" == "[VOLUME]"* ]]; then
    get_volume "${1:8}"
  fi
  if [[ "$1" == "[SONG]"* ]]; then
    get_song "${1:6}"
  fi
  if [[ "$1" == "[UPDATE]" ]]; then
    do_update
  fi
  if [[ "$1" == "[UPDATESLOW]" ]]; then
    do_slow_update
  fi
}

# Spawn new helper programs.
killall brm_bar_ping -q
$support_dir/brm_bar_ping &

killall brm_bar_ping_slow -q
sleep .1 && $support_dir/brm_bar_ping_slow &

killall brm_bar_bspc -q
sleep .2 && $support_dir/brm_bar_bspc &

# Make sure the fifo is real!
if [ ! -p $fifo ]; then
  mkfifo $fifo;
fi

# Initial calls
sleep .1 && echo "[VOLUME]$(amixer get Master|grep dB)" > $fifo &

while read line < $fifo; do

  parse_fifo "$line"
  output=""


  # Center
  output="$output %{c}"

  # Apps
  #output="$output [ "

  pianobar="%{A:pianobar &:}%{I:$icon_dir/pandora.png:}%{A}"
  output="$output $pianobar"

  gimp="%{A:gimp &:}%{I:$icon_dir/gimp.png:}%{A}"
  output="$output $gimp"

  firefox="%{A:firefox &:}%{I:$icon_dir/firefox.png:}%{A}"
  output="$output $firefox"

  terminal="%{A:urxvt &:}%{I:$icon_dir/terminal.png:}%{A}"
  output="$output $terminal"

  #output="$output ]"


  # Right side
  output="$output %{r}"

  if [ "$volume" != "" ]; then
    output="${output} $volume"
  fi

  if [ "$battery" != "" ]; then
    output="${output} $battery"
  fi

  if [ "$wifi" != "" ]; then
    output="${output} $wifi"
  fi

  if [ "$date" != "" ]; then
    output="${output} $date \t"
  fi


  # Left side
  output="$output %{l}"

  if [ "$desktops" != "" ]; then
    output="${output} \t $desktops"
  fi

  if [ "$song" != "" ]; then
    output="${output} $song"
  fi

#  if [ "$uptime" != "" ]; then
#    output="${output} \t $uptime"
#  fi

  if [ "$stat" != "" ]; then
    output="${output} $stat"
  fi

  echo -e $output | sed 's/\t/ /g';
done | bar -g${width}x20+0+0 -B $background -f $font | sh &> /tmp/brm_bar_log

#  cpu=$(top -b -n1 |grep "Cpu"|awk '{printf "%0.2f ", $3}')
#  output="$output \t CPU: $cpu"

